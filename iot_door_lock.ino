// DHT sensor library - Version: Latest 
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  Arduino IoT Cloud Variables description
  The following variables are automatically generated and updated when changes are made to the Thing


  bool lock;
  bool openlock;
  String message;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.

  Pin layout used:
 * -------------------------------------
 * -------------------------------------
 *             Arduino       
 * BUZZER      Nano      
 * Pin         Pin          
 * -------------------------------------
 * +           7           
 * -------------------------------------
 * -------------------------------------
 * -------------------------------------
 * Relay       Arduino       
 * Module      Uno/101       
 * Pin         Pin          
 * -------------------------------------
 * S          8           
 * -------------------------------------
 * -------------------------------------
 * -------------------------------------
 * 
 * Connect the lock to the relay
  */


#include "thingProperties.h"//cloud variables 
String words;//for arduino cloud messenger widget to send data
int lock = 8;
int buzzer = 7;

void setup() {
  Serial.begin(9600); // // Serial Communication is starting with 9600 of baudrate speed
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  // Defined in thingProperties.h
  initProperties();
  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}


void loop() {
  ArduinoCloud.update();
 
  
  
  
}

void opendoor()//this function opens and locks the lock
{
  words = "door opened";//log to widget
  message = words;
  lock = true;
  Serial.println("open");
  digitalWrite(lock, HIGH);
  tone(buzzer, 400); //ring the buzzer 
  delay(500);//wait 500 miliseconds
  noTone(buzzer);//end buzzer
  delay(3000);
  digitalWrite(lock,LOW);
  lock = false;
  words = "door Closed";//log to widget
  message = words;
}

void onMessageChange()  {
  // Add your code here to act upon Message change
}

void onLockChange()  {
  // Add your code here to act upon Lock change
}

/*
  Since Openlock is READ_WRITE variable, onOpenlockChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onOpenlockChange()  {
  // Add your code here to act upon Openlock change
  if(openlock){
    opendoor();
  }
  else{
  }
}
